Instructions to push your code to code.google.com
=================================================
1. Sign into GitHub and create a new repository
        Repository name: twu-biblioteca-yourname
        Privacy level: Public
        Don't check "Initialize this repository with a README"
        Add .gitignore: None
        Add a license: Apache License 2.0

2. Run 'git init' in the folder that was extracted from the downloaded .zip file, in order to
 initialize local repository.

3. Make a local commit.
    $ git add -A
    $ git commit -m “Initial commit”

(Dont forget to add the hidden .idea folder, as it will make opening your project in Intellij easier.)

4. After you are done with the local commit, you can share your code with "The World" by pushing it to your
 GitHub repository.
    $ git remote add origin https://github.com/<YOUR-GITHUB-USERNAME>/twu-biblioteca-<YOURNAME>
    $ git push origin master

Instructions to open your code in Intellij
==========================================
1. Go to File -> Open (or Open Project)
2. Select the directory containing the code
DONE !

Instructions to compile in Linux
================================
main() is located in BibliotecaApp.java

1) Open terminal and change directory to root of project folder
   Path should look similar to the following:
   /twu_biblioteca-master
2) Create a "classes" directory with the following command:
   $ mkdir classes

   Double check that our new "classes" directory is in the same
   directory as the "src" directory
3) Change directory to "src"
   Path should now be similar to: /twu_biblioteca-master/src
4) Enter the following command to compile to "classes" directory:
   $ javac -d ../classes com/twu/biblioteca/BibliotecaApp.java

   "classes" directory should now contain the .class files

Instructions to run in Linux
============================
1) Change to the "classes". The "com" directory should be the only
   item in there
2) Run the program with the following command:
   $ java com.twu.biblioteca.Biblioteca

   The program should now start, and its menu displayed.
   The numbers on the side of each option represent the input needed
   in order to perform the action of that option. For instance, "4" is
   listed alongside the "Quit" option, so entering "4" should quit the
   program